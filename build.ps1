# Diamond Recycling Mod JAR Builder
# Builds a multi-loader mod JAR from the data pack

$version = "1.3.4"
$modId = "mr_diamond_recycling"
$buildDir = "build"
$outputJar = "$buildDir/diamond-recycling-$version.jar"
$tempDir = "temp_build"

Write-Host "Building Diamond Recycling v$version..." -ForegroundColor Cyan

# Clean up previous builds
if (Test-Path $tempDir) {
    Remove-Item $tempDir -Recurse -Force
}
if (-not (Test-Path $buildDir)) {
    New-Item -ItemType Directory -Path $buildDir | Out-Null
}
if (Test-Path $outputJar) {
    Remove-Item $outputJar -Force
}

# Create temp directory
New-Item -ItemType Directory -Path $tempDir | Out-Null
New-Item -ItemType Directory -Path "$tempDir/META-INF" | Out-Null

Write-Host "Copying data pack files..." -ForegroundColor Yellow

# Copy data pack files
Copy-Item "pack.mcmeta" "$tempDir/pack.mcmeta"
Copy-Item "pack.png" "$tempDir/diamond-recycling_pack.png"
Copy-Item "credits.txt" "$tempDir/credits.txt"
Copy-Item "license.txt" "$tempDir/license.txt"

# Copy data directories using robocopy (faster and more reliable)
robocopy "data" "$tempDir/data" /E /NFL /NDL /NJH /NJS /nc /ns /np | Out-Null
robocopy "overlay_57" "$tempDir/overlay_57" /E /NFL /NDL /NJH /NJS /nc /ns /np | Out-Null
robocopy "overlay_71" "$tempDir/overlay_71" /E /NFL /NDL /NJH /NJS /nc /ns /np | Out-Null

Write-Host "Creating mod metadata files..." -ForegroundColor Yellow

# Create fabric.mod.json
$fabricMod = @{
    schemaVersion = 1
    id = $modId
    version = $version
    name = "Diamond Recycling"
    description = "Recycle diamond tools, diamond armor, and smithing templates into diamonds through crafting."
    authors = @("notblue")
    contact = @{
        homepage = "https://modrinth.com/datapack/diamond-recycling"
        sources = "https://github.com/not-blue/diamond-recycling"
        issues = "https://github.com/not-blue/diamond-recycling/issues"
    }
    license = "CC-BY-NC-SA-4.0"
    icon = "diamond-recycling_pack.png"
    environment = "*"
    depends = @{
        "fabric-resource-loader-v0" = "*"
    }
}
$fabricMod | ConvertTo-Json -Compress | Set-Content "$tempDir/fabric.mod.json" -Encoding UTF8

# Create quilt.mod.json
$quiltMod = @{
    schema_version = 1
    quilt_loader = @{
        group = "com.modrinth"
        id = $modId
        version = $version
        metadata = @{
            name = "Diamond Recycling"
            description = "Recycle diamond tools, diamond armor, and smithing templates into diamonds through crafting."
            contributors = @{
                notblue = "Member"
            }
            contact = @{
                homepage = "https://modrinth.com/datapack/diamond-recycling"
                sources = "https://github.com/not-blue/diamond-recycling"
                issues = "https://github.com/not-blue/diamond-recycling/issues"
            }
            icon = "diamond-recycling_pack.png"
        }
        intermediate_mappings = "net.fabricmc:intermediary"
        depends = @(
            @{
                id = "quilt_resource_loader"
                versions = "*"
                unless = "fabric-resource-loader-v0"
            }
        )
    }
}
$quiltMod | ConvertTo-Json -Depth 10 -Compress | Set-Content "$tempDir/quilt.mod.json" -Encoding UTF8

# Create Forge mods.toml
$forgeMods = @"

modLoader = 'lowcodefml'
loaderVersion = '[40,)'
license = 'CC-BY-NC-SA-4.0'
showAsResourcePack = false
mods = [
	{ modId = '$modId', version = '$version', displayName = 'Diamond Recycling', description = 'Recycle diamond tools, diamond armor, and smithing templates into diamonds through crafting.', logoFile = 'diamond-recycling_pack.png', updateJSONURL = 'https://api.modrinth.com/updates/jw67t8zN/forge_updates.json', credits = 'Generated by Modrinth', authors = 'notblue', displayURL = 'https://modrinth.com/datapack/diamond-recycling' },
]
issueTrackerURL = 'https://github.com/not-blue/diamond-recycling/issues'
"@
$forgeMods | Set-Content "$tempDir/META-INF/mods.toml" -Encoding UTF8

# Create NeoForge mods.toml
$neoForgeMods = @"

modLoader = 'javafml'
loaderVersion = '[1,)'
license = 'CC-BY-NC-SA-4.0'
showAsResourcePack = false
mods = [
	{ modId = '$modId', version = '$version', displayName = 'Diamond Recycling', description = 'Recycle diamond tools, diamond armor, and smithing templates into diamonds through crafting.', logoFile = 'diamond-recycling_pack.png', updateJSONURL = 'https://api.modrinth.com/updates/jw67t8zN/forge_updates.json?neoforge=only', credits = 'Generated by Modrinth', authors = 'notblue', displayURL = 'https://modrinth.com/datapack/diamond-recycling' },
]
issueTrackerURL = 'https://github.com/not-blue/diamond-recycling/issues'
"@
$neoForgeMods | Set-Content "$tempDir/META-INF/neoforge.mods.toml" -Encoding UTF8

Write-Host "Creating JAR file..." -ForegroundColor Yellow

# Create JAR (which is just a ZIP file)
$compress = @{
    Path = "$tempDir\*"
    CompressionLevel = "Optimal"
    DestinationPath = $outputJar
}
Compress-Archive @compress

# Clean up temp directory
Remove-Item $tempDir -Recurse -Force

Write-Host "Build complete: $outputJar" -ForegroundColor Green
Write-Host "File size: $([math]::Round((Get-Item $outputJar).Length / 1KB, 2)) KB" -ForegroundColor Green

